print "===Mu sample start===";

print " --Not Operator";
print 1 or 2;
print 1 and 2;
print 2 = 1;
print !(2 < 5);
print !(3 = 2 + 1);
print !(3 > 3 * 2);
print !(2 = 1);

print " --While Loop";
let #count := 1;

while #count < 100 ?
    print #count;
    #count := #count * 2; 
,,

print " --Until Loop";
#count := 1;

until #count > 100 ?
    print #count;
    #count := #count * 3;
,,

print " --If Clause";
if 0 > -5 ?
    print "yes, zero is greater than negative five"; 
,,

if 0 > 10 ?
    print "yes zero is greater than ten";
else 
    print "no, zero is not greater than ten";
,,

if false ?
    print "one";
else
    print "two";
,,

print " --Unless Clause";
let x: 5;
unless x = 4 ?
    print "good"; 
else    
    print "not good";
,,

unless x = 5 ?
    print "it's not five"; 
else
    print "it is five";
,,

print " --When Clause";
let value : 1;

when value:
    is = 0 ? print "it's zero";
    ,,
    is = 1 ? print "it's one";
    ,, 
    is >= 1 ? print "it's greater than or equal to one.";
    ,,
//,,

print " --String Concatenation";
let name: "steve";
let last: " poe";
let full_name: name + last;
print full_name;

print " --functions";
define addTogether(x, y) {
    return x + y;
}
print addTogether(22, 55);

define multiplyBoth(x, y) {
    return x * y;
}
print multiplyBoth(10, 99);

define divideByTen(x) {
    return x / 10;
}
print divideByTen(39);

define isEven(x) {
    return 0 = x % 2;
}
print isEven(3);
print isEven(58);

print "===Mu sample end ===";